name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# Cancel in-progress runs for the same PR/branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Download rumdl binaries
        run: npm run download-rumdl

      - name: Compile TypeScript
        run: npm run compile

      - name: Run tests
        run: npm test

  build:
    name: Build Extension
    runs-on: ubuntu-latest
    needs: [lint, test]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Download rumdl binaries
        run: npm run download-rumdl

      - name: Package extension
        run: npm run vsce:package

      - name: Upload VSIX artifact
        uses: actions/upload-artifact@v4
        with:
          name: rumdl-vscode-${{ github.sha }}
          path: "*.vsix"
          retention-days: 7

  verify-binaries:
    name: Verify rumdl binaries
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Download rumdl binaries
        run: npm run download-rumdl

      - name: Verify rumdl installation
        run: npm run verify-rumdl

      - name: Test rumdl binary (Unix)
        if: runner.os != 'Windows'
        run: |
          # Find the platform-specific binary and test it
          if [ "$RUNNER_OS" = "Linux" ]; then
            if [ "$RUNNER_ARCH" = "X64" ]; then
              BINARY="./bundled-tools/rumdl-x86_64-unknown-linux-gnu"
            else
              BINARY="./bundled-tools/rumdl-aarch64-unknown-linux-gnu"
            fi
          elif [ "$RUNNER_OS" = "macOS" ]; then
            if [ "$RUNNER_ARCH" = "X64" ]; then
              BINARY="./bundled-tools/rumdl-x86_64-apple-darwin"
            else
              BINARY="./bundled-tools/rumdl-aarch64-apple-darwin"
            fi
          fi

          if [ -f "$BINARY" ]; then
            echo "Testing binary: $BINARY"
            $BINARY --version
            echo "# Test Markdown" | $BINARY --stdin
          else
            echo "Binary not found: $BINARY"
            exit 1
          fi

      - name: Test rumdl binary (Windows)
        if: runner.os == 'Windows'
        run: |
          $binary = ".\bundled-tools\rumdl-x86_64-pc-windows-msvc.exe"
          if (Test-Path $binary) {
            Write-Host "Testing binary: $binary"
            & $binary --version
            if ($LASTEXITCODE -ne 0) { exit $LASTEXITCODE }
            echo "# Test Markdown" | & $binary --stdin
          } else {
            Write-Host "Binary not found: $binary"
            exit 1
          }

  security:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level=moderate

      - name: Check for vulnerabilities
        run: |
          # Run npm audit and capture output
          AUDIT_OUTPUT=$(npm audit --json --audit-level=moderate)
          VULNERABILITIES=$(echo "$AUDIT_OUTPUT" | jq -r '.metadata.vulnerabilities.total // 0')

          if [ "$VULNERABILITIES" -gt 0 ]; then
            echo "❌ Found $VULNERABILITIES vulnerabilities"
            npm audit
            exit 1
          else
            echo "✅ No vulnerabilities found"
          fi